#!/bin/sh
IP=`echo 172.16.0.{5,11}`
PORT=22
PASSWD="123456"
RETVAL=0

function Usage(){
if [ $# -eq 0 ]
 then
	cat <<EOF
Usage: [-key][Create and distribute the secret key...]
       [-f file][localfile and remotefile...]
       [-c command][Command Line To Execute...]
       [-d address][Host IP Address]	
EOF
	exit
fi

}


function  on_line(){
	for ip in $IP
	do
		ping $ip -c 1 -w 1 &>/dev/null
		if [ $? -eq 0 ]
	 	 then
			echo "$ip"
		fi
	done

}


function  off_line(){
        for ip in $IP
        do
                ping $ip -c 1 -w 1 &>/dev/null
                if [ $? -ne 0 ]
                 then
                        echo -e "\E[1;31;5m\a172.16.0.$ip Connection Timeout \E[0m"
                fi
        done

}

function file_1(){
if [ $UID -eq 0 ]
then
cat >.ssh-keygen.exp <<EOF
#!/usr/bin/expect
set hostname [lindex $argv 0]
spawn ssh-keygen -t dsa
expect {
        -timeout 5
        "/root/.ssh/id_dsa"              { exp_send "\r";exp_continue }
        "y/n"                            { exp_send "y\r";exp_continue }
        "empty for no passphrase"        { exp_send "\r";exp_continue }
        "Enter same passphrase again"    { exp_send "\r" }


}
expect eof
exit
EOF

else

cat >.ssh-keygen.exp <<EOF
#!/usr/bin/expect
set hostname [lindex $argv 0]
spawn ssh-keygen -t dsa
expect {
        -timeout 5
        "/home/fenfa/.ssh/id_dsa"        { exp_send "\r";exp_continue }
        "y/n"                            { exp_send "y\r";exp_continue }
        "empty for no passphrase"        { exp_send "\r";exp_continue }
        "Enter same passphrase again"    { exp_send "\r" }


}
expect eof
exit
EOF

fi
}


function  file_2(){
if [ $UID -eq 0 ]
 then
cat >.ssh-copy-id.exp <<EOF
#!/usr/bin/expect
set hostname [lindex \$argv 0]
spawn ssh-copy-id -i  /$USER/.ssh/id_dsa.pub "-p$PORT $USER@\$hostname"
set timeout 60
expect {
        -timeout 5
        "yes/no"        { exp_send "yes\r";exp_continue }
        "password"      { exp_send "$PASSWD\r" }
}
expect eof
exit
EOF

 else

cat >.ssh-copy-id.exp <<EOF
#!/usr/bin/expect
set hostname [lindex \$argv 0]
spawn ssh-copy-id -i  /home/$USER/.ssh/id_dsa.pub "-p$PORT $USER@\$hostname"
set timeout 60
expect {
        -timeout 5
        "yes/no"        { exp_send "yes\r";exp_continue }
        "password"      { exp_send "$PASSWD\r" }

}
expect eof
exit
EOF
fi
}


#!/bin/sh
function check_IP(){
	
	echo "$1"|egrep -q "\b^([1-9]{2,3}\.)([0-9]{1,3}\.){2}([0-9]{1,3}{1})\b"
	[ $? -ne 0 ] && {
			#echo "Please enter the correct IP"
			echo -e "\E[1;31m\aPlease enter the correct IP \E[0m"
			exit
			}
	num1=`echo "$1"|awk -F "." '{print $1}'`
	num2=`echo "$1"|awk -F "." '{print $2}'`
	num3=`echo "$1"|awk -F "." '{print $3}'`
	num4=`echo "$1"|awk -F "." '{print $4}'`
	if [ $num1 -gt 255 -o $num2 -gt 255 -o $num3 -gt 255 -o $num4 -gt 255 ]
	 then
		#echo "Please enter the correct IP"
		echo -e "\E[1;31m\aPlease enter the correct IP \E[0m"
		exit
	fi		

}






function Key(){
	if [ ! -f  ~.ssh/id_dsa ]
	 then 
		[ ! -f .ssh-keygen.exp ]&& file_1
		expect .ssh-keygen.exp &>/dev/null
	fi
}


function give_out(){
	Key
	for ip in $IP
	do
                ping $ip -c 1 -w 1 &>/dev/null
                if [ $? -eq 0 ]
		 then
			[ ! -f .ssh-copy-id.exp ]&& file_2
			expect .ssh-copy-id.exp $ip >/dev/null 2>&1
			if [ $? -eq 0 -o $? -eq 1 ]
                         then
                               	echo -e "\E[1;32mlocal id_dsa.pub to $ip is OK \E[0m"
                        fi
		fi

		
	done
	off_line	
}


function Command(){
	[ $# -eq 1 ]&& Usage
	shift
        for ip in $IP
        do
                ping $ip -w 1 -c 1 &>/dev/null
                if [ $? -eq 0 ]
                 then
                        echo -e "\E[1;32m$ip \E[33m=====================================================\E[0m"
                       ssh -p $PORT $USER@$ip $@ 2>/dev/null
                        echo -e "\E[33m================================================================\E[0m"

                else
			off_line			
                fi
        done

}


function ssh_file(){
	[ $# -ne 3 ]&& Usage
	shift
	localfile=`echo $1|awk -F "[ /~]" '{print $NF}'`
	for ip in $IP
	do
		ping $ip -w 1 -c 1 &>/dev/null
		if [ $? -eq 0 ]
	 	 then
			[ ! -e $1 ] &&{ 
				$1:No such file or directory 
				exit
				}
			rsync -az  $1  -e "ssh -p $PORT"  $USER@$ip:$HOME  &>/dev/null  &&\
			ssh -p $PORT -t $USER@$ip sudo rsync -az $HOME/$localfile $2 &>/dev/null
			if [ $? -eq 0 ]
			 then
				echo -e "\E[1;32mlocal $1 to $ip $2 is OK    \E[0m"
			 else
				echo -e "\E[1;33mlocal $1 to $ip $2 is failed \E[0m"
			fi
			
		 else
			off_line				
		fi
	done		

}


function address(){
	[ $# -ne 2 ]&& Usage
	shift
	check_IP $1
	ping $1 -w 1 -c 1 &>/dev/null
	if [ $? -eq 0 ]
	 then
		ssh -p $PORT $USER@$1 
	 else
		echo -e "\E[1;31;5m\a$1 Connection Timeout \E[0m"
	fi
}



case $1 in 
    -key)
	give_out
	;;
      -c)
	Command $@
	;;
      -f)
	ssh_file $@
	;;
      -d)
	address $@
	;;	
      *)
	Usage
esac




